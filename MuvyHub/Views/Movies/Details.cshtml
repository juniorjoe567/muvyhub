@model MuvyHub.Models.DetailsViewModel
@{
    ViewData["Title"] = Model.Details?.DisplayTitle ?? "Details";
    var details = Model.Details;
}

@if (details != null)
{
    <div class="details-backdrop">
        <div class="backdrop-overlay"></div>
        <img src="@details.FullBackdropPath" alt="@details.DisplayTitle backdrop" class="backdrop-img">
        <div class="container details-content">
            <div class="row">
                <div class="col-md-8">
                    <h1 class="display-4 fw-bold">@details.DisplayTitle</h1>

                    <div class="d-flex align-items-center text-secondary mb-3">
                        <span class="badge bg-warning text-dark me-3">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star-fill me-1" viewBox="0 0 16 16">
                                <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z" />
                            </svg>
                            @details.VoteAverage.ToString("0.0")
                        </span>
                        <span>@(!string.IsNullOrEmpty(details.ReleaseDate) ? DateTime.Parse(details.ReleaseDate).Year.ToString() : !string.IsNullOrEmpty(details.FirstAirDate) ? DateTime.Parse(details.FirstAirDate).Year.ToString() : "")</span>
                    </div>

                    <p class="lead">@details.Overview</p>

                    <div class="mb-4">
                        @foreach (var genre in details.Genres)
                        {
                            <span class="badge rounded-pill text-bg-secondary me-1">@genre.Name</span>
                        }
                    </div>

                    @if (!string.IsNullOrEmpty(Model.TrailerKey))
                    {
                        <button type="button" class="btn btn-danger btn-lg" data-bs-toggle="modal" data-bs-target="#trailerModal">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-play-fill me-1" viewBox="0 0 16 16">
                                <path d="m11.596 8.697-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z" />
                            </svg>
                            Watch Trailer
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.TrailerKey))
    {
        <div class="modal fade trailer-modal" id="trailerModal" tabindex="-1" aria-labelledby="trailerModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-xl">
                <div class="modal-content">
                    <div class="modal-header border-0">
                        <h5 class="modal-title" id="trailerModalLabel">@details.DisplayTitle Trailer</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body p-0">
                        <div class="trailer-iframe-container">
                            <iframe id="youtube-trailer" src="https://www.youtube.com/embed/@Model.TrailerKey" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}
else
{
    <div class="text-center mt-5">
        <h2 class="text-light">Sorry, details could not be found.</h2>
        <a asp-action="Index" class="btn btn-primary mt-3">Back to list</a>
    </div>
}


@section Scripts {
    <script>
        const trailerModal = document.getElementById('trailerModal');
        if (trailerModal) {
            trailerModal.addEventListener('hidden.bs.modal', event => {
                const iframe = document.getElementById('youtube-trailer');
                const src = iframe.src;
                iframe.src = src;
            });
        }
    </script>
}
