@using System.Reflection
@using System.ComponentModel.DataAnnotations
@model MuvyHub.Models.Person
@{
    var locations = Enum.GetValues(typeof(MuvyHub.Models.Location))
        .Cast<MuvyHub.Models.Location>()
        .Select(l => new
        {
            Value = l,
            DisplayName = l.GetType()
                .GetMember(l.ToString())[0]
                .GetCustomAttribute<DisplayAttribute>()?.Name ?? l.ToString()
        })
        .OrderBy(l => l.DisplayName)
        .ToList();
}
<div class="modal-header">
    <h5 class="modal-title">Edit @Model.FullName</h5>
    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
</div>
<div class="modal-body">
    <form id="editPersonForm" enctype="multipart/form-data">
        <input type="hidden" name="Id" value="@Model.Id" />

        <div class="mb-3">
            <label class="form-label">Full Name</label>
            <input type="text" name="FullName" class="form-control" value="@Model.FullName" />
        </div>

        <div class="mb-3">
            <label class="form-label">Date of Birth</label>
            <input type="date" name="DateOfBirth" class="form-control" value="@Model.DateOfBirth.ToString("yyyy-MM-dd")" />
        </div>

        <div class="mb-3">
            <label class="form-label">WhatsApp Number</label>
            <input type="text" name="WhatsappNumber" class="form-control" value="@Model.WhatsappNumber" />
        </div>

        <div class="mb-3">
            <label class="form-label">Location</label>
            <select name="Location" class="form-select" required>
                @foreach (var location in locations)
                {
                    if (Model.Location == location.Value)
                    {
                        <option value="@location.Value" selected>@location.DisplayName</option>
                    }
                    else
                    {
                        <option value="@location.Value">@location.DisplayName</option>
                    }
                }
            </select>
        </div>

        <div class="mb-3">
            <label class="form-label">Profile Picture (Replace)</label>
            <input type="file" name="ProfilePicture" class="form-control" accept="image/*" />
        </div>

        <div class="mb-3">
            <label class="form-label">Add More Media</label>
            <input type="file" name="OtherMedia" multiple class="form-control" accept="image/*,video/*" />
        </div>

        <div class="mb-3">
            <label class="form-label">Description</label>
            <textarea name="Description" class="form-control">@Model.Description</textarea>
        </div>

        <div class="form-check mb-3">
            <input type="checkbox" name="IsVerified" class="form-check-input" @(Model.IsVerified ? "checked" : "") />
            <label class="form-check-label">Verified</label>
        </div>

        <button type="submit" class="btn btn-warning">Save Changes</button>
    </form>
</div>
<div class="modal-footer d-sm-none justify-content-center">
    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
</div>